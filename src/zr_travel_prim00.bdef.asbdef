managed;
strict ( 2 );
with draft;

define behavior for zr_travel_prim00 alias Travel
implementation in class zbp_r_travel_prim00 unique
persistent table ztravel_prim_a
draft table ztravel_prim_d
lock master
total etag LastChangedAt
authorization master ( global, instance )
etag master LocalLastChangedAt
{
  create ( precheck );
  update ( precheck );
  delete;
  association _Booking
  { create ( features : instance,
    authorization : update );
    with draft; }

  field ( numbering : managed, readonly ) TravelUUID;
  field ( readonly ) TravelID,
  OverallStatus,
  TotalPrice,
  LocalCreatedAt,
  LocalCreatedBy,
  LocalLastChangedAt,
  LocalLastChangedBy;

  field ( mandatory ) CustomerID,
  AgencyID,
  BeginDate,
  EndDate;

  field ( features : instance ) BookingFee;

  action ( features : instance, authorization : update ) acceptTravel result [1] $self;
  action ( features : instance, authorization : update ) rejectTravel result [1] $self;
  action ( features : instance, authorization : update ) deductDiscount
    parameter za_travel_prim00 result [1] $self;
  internal action reCalcTotalPrice;

  determination setTravelNumber on save { create; }
  determination setStatusToOpen on modify { create; }
  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  validation validateCustomer on save { create; field CustomerID; }
  validation validateAgency on save { create; field AgencyID; }
  validation validateDates on save { create; field BeginDate, EndDate; }

  draft action Resume with additional implementation;
  draft action Edit;
  draft action Activate optimized;
  draft action Discard;

  draft determine action Prepare
  {
    validation validateCustomer;
    validation validateAgency;
    validation validateDates;
    validation Booking~validateCustomer;
    validation Booking~validateConnection;

  }

  mapping for ztravel_prim_a
    {
      TravelUUID         = travel_uuid;
      TravelID           = travel_id;
      AgencyID           = agency_id;
      CustomerID         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      OverallStatus      = overall_status;
      LocalCreatedBy     = local_created_by;
      LocalCreatedAt     = local_created_at;
      LocalLastChangedBy = local_last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
      LastChangedAt      = last_changed_at;
    }
}

define behavior for zr_booking_prim00 alias Booking
implementation in class zbp_r_booking_prim00 unique
persistent table zbooking_prim_a
draft table zbooking_prim_d
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{

  update;
  delete;

  association _Travel { with draft; }

  field ( numbering : managed, readonly ) BookingUUID;

  field ( readonly ) TravelUUID,
  BookingID,
  BookingDate,
  LocalLastChangedAt;

  field ( mandatory ) CustomerID,
  AirlineID,
  ConnectionID,
  FlightDate;

  determination setBookingNumber on save { create; }
  determination setBookingDate on save { create; }
  determination calculateTotalPrice on modify
  { create; field FlightPrice,
    CurrencyCode; }

  validation validateCustomer on save { create; field CustomerID; }
  validation validateConnection on save
  { create; field AirlineID,
    ConnectionID,
    FlightDate; }

  mapping for zbooking_prim_a
    {
      BookingUUID        = booking_uuid;
      TravelUUID         = parent_uuid;
      BookingID          = booking_id;
      BookingDate        = booking_date;
      CustomerID         = customer_id;
      AirlineID          = carrier_id;
      ConnectionID       = connection_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      CurrencyCode       = currency_code;
      BookingStatus      = booking_status;
      LocalLastChangedAt = local_last_changed_at;
    }
}